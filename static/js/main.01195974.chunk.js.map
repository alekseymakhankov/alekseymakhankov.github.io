{"version":3,"sources":["helpers/classnames.js","packages/Home/index.jsx","components/Gist/index.jsx","components/Header/index.jsx","components/BaseLayout/index.jsx","components/Button/index.jsx","components/HeaderText/index.jsx","packages/HyperModal/index.jsx","components/Arrow/index.jsx","components/NumberInput/index.jsx","components/Checkbox/icon.jsx","components/Checkbox/index.jsx","components/Select/index.jsx","components/Panel/index.jsx","components/Row/index.jsx","packages/HyperTree/data.js","packages/HyperTree/index.jsx","App.js","helpers/parseQuery.js","serviceWorker.js","index.js"],"names":["convertObjectToString","classes","Object","keys","filter","key","reduce","classString","item","classnames","join","Home","className","Gist","this","_updateIframeContent","prevProps","prevState","props","id","file","fileArg","iframe","iframeNode","doc","document","contentDocument","contentWindow","gistLink","_defineUrl","gistScript","elementId","resizeScript","iframeHtml","open","writeln","close","ref","n","title","width","frameBorder","marginwidth","marginheight","hspace","vspace","React","PureComponent","Header","headerRef","createRef","handleScroll","current","body","scrollTop","documentElement","classList","add","remove","addEventListener","removeEventListener","subTitle","href","link","target","rel","Component","BaseLayout","renderIcon","children","Button","onClick","wide","position","ButtonComponent","headerMapper","h1","h2","h3","h4","h5","h6","HeaderText","size","HyperModalComponent","useState","isModalOpen","setModalOpen","index","setIndex","contentClassName","stackable","stackableIndex","renderOpenButton","requestOpen","isOpen","requestClose","wrapperClassName","dimmerClassName","isFullscreen","Arrow","xmlns","height","viewBox","d","Input","tooltip","value","onChange","label","type","min","pattern","max","getValueNumber","useCallback","stringValue","valueNumber","Number","parseInt","isNaN","incrementValue","decrementValue","handleChange","event","parsedValue","newValue","effect","data-for","data-tip","Icon","version","x","y","style","fill","CheckBox","checked","setChecked","handleToggle","icon","Select","options","color","isOpened","setOpened","useRef","handleOpen","handleClose","e","handleOutsideClick","contains","useEffect","handleColorChange","hex","disabled","opened","onChangeComplete","map","option","selected","Panel","Row","normal","Children","toArray","length","child","array","cloneElement","smallData","name","getChildren","Promise","resolve","setTimeout","data","updateField","payload","initialState","gapMode","disableLines","disableHorizontalLines","disableVerticalLines","depthGap","draggable","verticalLineOffset","verticalLineTopOffset","hoverColor","selectionColor","multipleSelect","verticalLineColor","horizontalLineColor","enhanced","reducer","state","action","gapModeOptions","colorOptions","hoverOptions","lineColorsOptions","colorMap","default","white","gray","hoverMap","HyperTree","useReducer","dispatch","useTreeState","defaultOpened","required","handlers","handleChangeField","field","code","renderNode","node","onToggle","hasChildren","isSelected","treeHandlers","trees","tree","setSelected","childrenCount","NumberInput","Checkbox","marginBottom","Array","_","dangerouslySetInnerHTML","__html","highlight","highlightAuto","horizontalLineStyles","stroke","strokeWidth","strokeDasharray","verticalLineStyles","staticNodeHeight","undefined","selectedNodeWrapper","nodeWrapper","treeWrapper","packagesMapper","HyperModal","App","packageType","query","queryObject","replace","split","forEach","queryFragment","parseQuery","location","search","package","PackageComponent","withRouter","Boolean","window","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01195974.chunk.js","sourcesContent":["export const convertObjectToString = (classes) => {\r\n  return Object\r\n    .keys(classes)\r\n    .filter(key => !!classes[key])\r\n    .reduce(\r\n      (classString, item) => (classString\r\n        ? `${classString}${item ? ` ${item}` : ''}`\r\n        : `${item}`),\r\n      '',\r\n    );\r\n}\r\n\r\nexport const classnames = (...classes) => {\r\n  if (classes[0] && typeof classes[0] === 'string') {\r\n    return classes.join(' ');\r\n  }\r\n  return convertObjectToString(classes[0]);\r\n}\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-wrapper\">\r\n      <div className=\"title\">\r\n        Welcome to awesome packages landing\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nclass Gist extends React.PureComponent {\r\n  componentDidMount() {\r\n    this._updateIframeContent();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this._updateIframeContent();\r\n  }\r\n\r\n  _defineUrl() {\r\n    const { id, file } = this.props;\r\n\r\n    const fileArg = file ? `?file=${file}` : '';\r\n\r\n    return `https://gist.github.com/${id}.js${fileArg}`;\r\n  }\r\n\r\n  _updateIframeContent() {\r\n    const { id, file } = this.props;\r\n\r\n    const iframe = this.iframeNode;\r\n\r\n    let doc = iframe.document;\r\n    if (iframe.contentDocument) doc = iframe.contentDocument;\r\n    else if (iframe.contentWindow) doc = iframe.contentWindow.document;\r\n\r\n    const gistLink = this._defineUrl()\r\n    const gistScript = `<script type=\"text/javascript\" src=\"${gistLink}\"></script>`;\r\n    const styles = '<style>*{font-size:12px;}</style>';\r\n    const elementId = file ? `gist-${id}-${file}` : `gist-${id}`;\r\n    const resizeScript = `onload=\"parent.document.getElementById('${elementId}').style.height=document.body.scrollHeight + 'px'\"`;\r\n    const meta =\r\n      \"<meta name='viewport' content='width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1, shrink-to-fit=no'>\"\r\n    const iframeHtml = `<html><head>${meta}<base target=\"_parent\">${styles}</head><body ${resizeScript}>${gistScript}</body></html>`;\r\n\r\n    doc.open();\r\n    doc.writeln(iframeHtml);\r\n    doc.close();\r\n  }\r\n\r\n  render() {\r\n    const { id, file } = this.props;\r\n\r\n    return (\r\n      <iframe\r\n        ref={(n) => { this.iframeNode = n; }}\r\n        id={file ? `gist-${id}-${file}` : `gist-${id}`}\r\n        title=\"gist\"\r\n        width=\"100%\"\r\n        frameBorder=\"0\"\r\n        marginwidth=\"0\"\r\n        marginheight=\"0\"\r\n        hspace=\"0\"\r\n        vspace=\"0\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gist;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nclass Header extends React.Component {\r\n  headerRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const { current } = this.headerRef;\r\n    if (current) {\r\n      if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\r\n        current.classList.add('small');\r\n      } else {\r\n        current.classList.remove('small');\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header\r\n        className=\"header-wrapper\"\r\n        ref={this.headerRef}\r\n      >\r\n        <div className=\"title-wrapper\">\r\n          <div className=\"title\">{this.props.title}</div>\r\n          <div className=\"subtitle\">{this.props.subTitle}</div>\r\n        </div>\r\n        <a\r\n          className=\"github-icon-wrapper\"\r\n          href={this.props.link}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div className=\"github-icon\"/>\r\n        </a>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { classnames } from 'helpers';\r\nimport Header from 'components/Header';\r\nimport './style.scss';\r\n\r\nclass BaseLayout extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className={classnames('base-layout-wrapper', this.props.className)}>\r\n        <Header\r\n          title={this.props.title}\r\n          subTitle={this.props.subTitle}\r\n          link={this.props.link} />\r\n        <div className=\"lib-icon\">\r\n          {this.props.renderIcon && this.props.renderIcon()}\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          {this.props.children}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BaseLayout;\r\n","import React from 'react';\r\nimport { classnames } from 'helpers';\r\nimport './style.scss';\r\n\r\nconst Button = ({ onClick, title, wide, position = 'left' }) => {\r\n  const ButtonComponent = () => (\r\n    <button className=\"custom-button\" onClick={onClick}>{title}</button>\r\n  );\r\n  if (wide) {\r\n    return (\r\n      <div className={classnames('button-wrapper', position)}>\r\n        <ButtonComponent />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonComponent />\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Header1 = ({ title, ...props }) => (<h1 {...props}>{title}</h1>);\r\nconst Header2 = ({ title, ...props }) => (<h2 {...props}>{title}</h2>);\r\nconst Header3 = ({ title, ...props }) => (<h3 {...props}>{title}</h3>);\r\nconst Header4 = ({ title, ...props }) => (<h4 {...props}>{title}</h4>);\r\nconst Header5 = ({ title, ...props }) => (<h5 {...props}>{title}</h5>);\r\nconst Header6 = ({ title, ...props }) => (<h6 {...props}>{title}</h6>);\r\n\r\nconst headerMapper = {\r\n  h1: Header1,\r\n  h2: Header2,\r\n  h3: Header3,\r\n  h4: Header4,\r\n  h5: Header5,\r\n  h6: Header6,\r\n};\r\n\r\nconst HeaderText = ({ title, size = 'h1' }) => {\r\n  const Header = headerMapper[size];\r\n  return (\r\n    <Header title={title} className=\"custom-header-text\" />\r\n  );\r\n}\r\n\r\nexport default HeaderText;\r\n","import React, { useState } from 'react';\r\nimport HyperModal, { ModalStack } from 'react-hyper-modal';\r\nimport Gist from '../../components/Gist';\r\nimport BaseLayout from '../../components/BaseLayout';\r\nimport Button from '../../components/Button';\r\nimport HeaderText from '../../components/HeaderText';\r\nimport './style.scss';\r\n\r\nconst HyperModalComponent = () => {\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n  const [index, setIndex] = useState(0)\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = () => setModalOpen(false);\r\n  return (\r\n    <BaseLayout\r\n      className=\"example-hyper-modal-wrapper\"\r\n      title=\"react hyper modal\"\r\n      link=\"https://github.com/alekseymakhankov/hyper-modal\"\r\n    >\r\n      <div className=\"content\">\r\n        <HeaderText title=\"Stackable modal content\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-stackable-example.jsx\"\r\n        />\r\n        <HyperModal\r\n          classes={{\r\n            contentClassName: 'modal-content',\r\n          }}\r\n          stackable\r\n          stackableIndex={index}\r\n          renderOpenButton={(requestOpen) => {\r\n            return (\r\n              <Button\r\n                onClick={requestOpen}\r\n                title=\"open stackable modal\"\r\n                position=\"center\"\r\n                wide\r\n              />\r\n            )\r\n          }}\r\n        >\r\n          {props => (\r\n            <ModalStack {...props} className=\"stackable-wrapper\">\r\n              <div className=\"stackable-item\">\r\n                <div>root content</div>\r\n                <Button\r\n                  onClick={() => setIndex(1)}\r\n                  title=\"next level\"\r\n                  position=\"center\"\r\n                  wide\r\n                />\r\n              </div>\r\n              <div className=\"stackable-item\">\r\n                <div>the second level</div>\r\n                <Button\r\n                  onClick={() => setIndex(0)}\r\n                  title=\"prev level\"\r\n                  position=\"center\"\r\n                  wide\r\n                />\r\n                <Button\r\n                  onClick={() => setIndex(2)}\r\n                  title=\"next level\"\r\n                  position=\"center\"\r\n                  wide\r\n                />\r\n              </div>\r\n              <div className=\"stackable-item\">\r\n                <div>the third level</div>\r\n                <Button\r\n                  onClick={() => setIndex(1)}\r\n                  title=\"prev level\"\r\n                  position=\"center\"\r\n                  wide\r\n                />\r\n              </div>\r\n            </ModalStack>\r\n          )}\r\n        </HyperModal>\r\n\r\n\r\n        <HyperModal\r\n          isOpen={isModalOpen}\r\n          requestClose={closeModal}\r\n          classes={{\r\n            contentClassName: 'modal-content',\r\n          }}\r\n        />\r\n        <HeaderText title=\"Simple controlled modal\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-simple-example.jsx\"\r\n        />\r\n        <Button\r\n          onClick={openModal}\r\n          title=\"open simple modal\"\r\n          position=\"center\"\r\n          wide\r\n        />\r\n\r\n        <HeaderText title=\"Uncontrolled modal\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-uncontrolled-example.jsx\"\r\n        />\r\n        <HyperModal\r\n          classes={{\r\n            contentClassName: 'modal-content',\r\n          }}\r\n          renderOpenButton={(requestOpen) => {\r\n            return (\r\n              <Button\r\n                onClick={requestOpen}\r\n                title=\"open uncontrolled modal\"\r\n                position=\"center\"\r\n                wide\r\n              />\r\n            )\r\n          }}\r\n        />\r\n\r\n        <HeaderText title=\"Uncontrolled modal with default button\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-default-button-example.jsx\"\r\n        />\r\n        <HyperModal\r\n          classes={{\r\n            contentClassName: 'modal-content',\r\n          }}\r\n          renderOpenButton\r\n        />\r\n\r\n        <HeaderText title=\"Custom modal content\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-custom-content-example.jsx\"\r\n        />\r\n        <HyperModal\r\n          classes={{\r\n            contentClassName: 'modal-content',\r\n          }}\r\n          renderOpenButton={(requestOpen) => {\r\n            return (\r\n              <Button\r\n                onClick={requestOpen}\r\n                title=\"open modal\"\r\n                position=\"center\"\r\n                wide\r\n              />\r\n            )\r\n          }}\r\n        >\r\n          <div>\r\n            Your awesome modal content\r\n            </div>\r\n        </HyperModal>\r\n\r\n        <HeaderText title=\"Fullscreen modal\" />\r\n        <Gist\r\n          id=\"965ebd30f423f14ac342ba6be07fe54b\"\r\n          file=\"react-hyper-modal-fullscreen-example.jsx\"\r\n        />\r\n        <HyperModal\r\n          classes={{\r\n            contentClassName: 'modal-fullscreen',\r\n            wrapperClassName: 'wrapper-modal',\r\n            dimmerClassName: 'dimmer-modal'\r\n          }}\r\n          isFullscreen\r\n          renderOpenButton={(requestOpen) => {\r\n            return (\r\n              <Button\r\n                onClick={requestOpen}\r\n                title=\"open fullscreen modal\"\r\n                position=\"center\"\r\n                wide\r\n              />\r\n            )\r\n          }}\r\n        />\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n}\r\n\r\nexport default HyperModalComponent;\r\n","import * as React from 'react'\nimport  './style.scss'\n\nconst Arrow = ({ onClick }) => (\n  <svg\n    className=\"arrow-icon\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"10\"\n    height=\"10\"\n    viewBox=\"0 0 24 24\"\n    onClick={onClick}\n  >\n    <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" />\n  </svg>\n)\n\nexport default Arrow\n","import React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport Arrow from '../Arrow'\nimport './style.scss'\n\nconst Input = ({ id, tooltip, value, onChange, type = 'text', label, pattern, min, max, ...props }) => {\n  const getValueNumber = React.useCallback((stringValue = '') => {\n    const valueNumber = Number.parseInt(stringValue, 10)\n      return isNaN(valueNumber) ? 0 : valueNumber\n    }, [])\n\n  const incrementValue = React.useCallback(() => {\n    const valueNumber = getValueNumber(value)\n    const newValue = typeof max !== 'undefined' && (valueNumber < max)\n      ? valueNumber + 1\n      : valueNumber\n    onChange && onChange(`${newValue}`)\n  }, [getValueNumber, onChange, max, value])\n\n  const decrementValue = React.useCallback(() => {\n    const valueNumber = getValueNumber(value)\n    const newValue = typeof min !== 'undefined' && valueNumber > min\n      ? valueNumber - 1\n      : valueNumber\n    onChange && onChange(`${newValue}`)\n  }, [getValueNumber, onChange, min, value])\n\n  const handleChange = React.useCallback(event => {\n    const parsedValue = getValueNumber(event.target.value)\n    let newValue = parsedValue\n\n    if (typeof min === 'number' && parsedValue < min) {\n      newValue = min\n    } else if (typeof max === 'number' && parsedValue > max) {\n      newValue = max\n    }\n\n    onChange && onChange(\n      `${newValue}`\n    )\n  }, [getValueNumber, onChange, min, max])\n\n\n\n\n  return (\n    <div className=\"default-input-wrapper\">\n      <div className=\"default-label\">{label}</div>\n      {tooltip && (\n        <ReactTooltip id={id} effect='solid' />\n      )}\n      <div className=\"input-wrapper\" data-for={id} data-tip={tooltip}>\n        <input {...props} className=\"default-input\" type=\"text\" value={value} onChange={handleChange} />\n        <div className=\"arrow-input arrow-up\" onClick={incrementValue}><Arrow /></div>\n        <div className=\"arrow-input arrow-down\" onClick={decrementValue}><Arrow /></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\n\nconst Icon = () => (\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n    viewBox=\"0 0 80.588 61.158\">\n    <path style={{ fill: '#fff' }} d=\"M29.658,61.157c-1.238,0-2.427-0.491-3.305-1.369L1.37,34.808c-1.826-1.825-1.826-4.785,0-6.611\n\tc1.825-1.826,4.786-1.827,6.611,0l21.485,21.481L72.426,1.561c1.719-1.924,4.674-2.094,6.601-0.374\n\tc1.926,1.72,2.094,4.675,0.374,6.601L33.145,59.595c-0.856,0.959-2.07,1.523-3.355,1.56C29.746,61.156,29.702,61.157,29.658,61.157z\n\t\"/>\n  </svg>\n)\n\nexport default Icon\n","import React from 'react'\nimport Icon from './icon'\nimport { classnames } from '../../helpers'\nimport './style.scss'\n\nconst CheckBox = ({ label, onChange, ...props }) => {\n  const [checked, setChecked] = React.useState(false)\n\n  const handleToggle = React.useCallback(() => {\n    if (onChange) {\n      onChange(!checked)\n    }\n    setChecked(!checked)\n  }, [onChange, checked])\n\n  return (\n    <div className=\"checkbox-wrapper\" onClick={handleToggle} {...props}>\n      <div className={classnames({ icon: true, checked })}><Icon checked={checked} /></div>\n      <span className=\"checkbox-label\">{label}</span>\n    </div>\n  )\n}\n\nexport default CheckBox\n","import React from 'react'\nimport { ChromePicker } from 'react-color'\nimport ReactTooltip from 'react-tooltip'\nimport Arrow from '../Arrow'\nimport { classnames } from '../../helpers'\nimport './style.scss'\n\nconst Select = ({ id, tooltip, options = [], label, value, onChange, color }) => {\n  const [isOpened, setOpened] = React.useState(false)\n  const ref = React.useRef(null)\n\n  const handleOpen = React.useCallback(() => {\n    setOpened(true)\n  }, [])\n\n  const handleClose = React.useCallback(() => {\n    setOpened(false)\n  }, [])\n\n  const handleChange = React.useCallback(value => e => {\n    if (onChange) {\n      onChange(value)\n    }\n    handleClose()\n  }, [onChange, handleClose])\n\n  const handleOutsideClick = React.useCallback(event => {\n    if (isOpened && ref.current && !ref.current.contains(event.target)) {\n      handleClose()\n    }\n  }, [handleClose, ref, isOpened])\n\n  React.useEffect(() => {\n    document.addEventListener('click', handleOutsideClick, false)\n    return () => {\n      document.removeEventListener('click', handleOutsideClick, false)\n    }\n  }, [handleOutsideClick])\n\n  const handleColorChange = React.useCallback((color) => {\n    if (onChange) {\n      onChange(color.hex)\n    }\n    // handleClose()\n  }, [onChange])\n\n  if (color) {\n    return (\n      <div className=\"default-select-wrapper\">\n        <div className=\"default-label\">{label}</div>\n        <div className=\"input-wrapper\" onClick={handleOpen}>\n          <input className=\"default-input\" type=\"text\" value={value} disabled />\n        </div>\n        <div\n          className={classnames({\n            'menu-wrapper': true,\n            opened: isOpened,\n          })}\n          ref={ref}\n        >\n          <ChromePicker width=\"100%\" color={value}  onChangeComplete={handleColorChange} />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"default-select-wrapper\">\n      <div className=\"default-label\">{label}</div>\n      {tooltip && (\n        <ReactTooltip id={id} effect='solid' />\n      )}\n      <div className=\"input-wrapper\" data-for={id} data-tip={tooltip}>\n        <input className=\"default-input\" type=\"text\" value={value} disabled />\n        <div className=\"arrow\" onClick={handleOpen}>\n          <Arrow />\n        </div>\n      </div>\n      <div\n        className={classnames({\n          'menu-wrapper': true,\n          opened: isOpened,\n        })}\n        ref={ref}\n      >\n        {options.map(option => (\n          <div\n            key={option.value}\n            className={classnames({\n              'menu-item': true,\n              selected: value === option.value\n            })}\n            onClick={handleChange(option.value)}\n          >\n            <div>{option.label}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport './style.scss'\n\nconst Panel = ({ label, children }) => (\n  <div className=\"panel-wrapper\">\n    <div className=\"label\">{label}</div>\n    <div className=\"content\">{children}</div>\n  </div>\n)\n\nexport default Panel\n","import React from 'react'\nimport './style.scss'\n\nconst Row = ({ children, normal, ...props }) => {\n  const style = {}\n  if (normal) {\n    style.width = `${100 / (React.Children.toArray(children).length || 1)}%`\n  }\n  return (\n    <div className=\"row\" {...props}>\n      {React.Children.map(children, (child, index, array) =>\n        React.cloneElement(child, { ...(child.props || {}), style }))}\n    </div>\n  )\n}\n\nexport default Row\n","const asyncChildren = [\n  {\n    id: 5,\n    name: 'Child 1__1',\n    children: [\n      {\n        id: 15,\n        name: 'Child 1__1__0',\n      },\n      {\n        id: 8,\n        name: 'Child 1__1__1',\n        children: [\n          {\n            id: 9,\n            name: 'Child 1__1__1__1',\n          },\n          {\n            id: 10,\n            name: 'Child 1__1__1__2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 6,\n    name: 'Child 1__2',\n  },\n  {\n    id: 7,\n    name: 'Child 1__3',\n  },\n]\n\nconst getChildren1 = () => new Promise((resolve) => setTimeout(() => resolve([\n  {\n    id: 4,\n    name: 'Child 2__1',\n  },\n]), 1000))\n\n\nexport const smallData = {\n  id: 1,\n  name: 'Parent 1',\n  children: [\n    {\n      id: 2,\n      name: 'Child 1',\n      children: asyncChildren,\n    },\n    {\n      id: 3,\n      name: 'Child 2',\n      getChildren: getChildren1,\n    },\n  ],\n}\n\n\nexport const data = {\n  id: 1,\n  name: 'Chief Executive Officer',\n  title: 'CEO',\n  children: [\n    {\n      id: 2,\n      name: 'Chief Revenue Officer',\n      title: 'CRO',\n      children: [\n        {\n          id: 6,\n          name: 'Sales',\n        },\n        {\n          id: 7,\n          name: 'Marketing',\n        },\n        {\n          id: 8,\n          name: 'Customer Sucess',\n        },\n      ]\n    },\n    {\n      id: 3,\n      name: 'Chief Technology Officer',\n      title: 'CTO',\n      children: [\n        {\n          id: 9,\n          name: 'Product',\n        },\n        {\n          id: 10,\n          name: 'Dev',\n        },\n        {\n          id: 11,\n          name: 'Quality management',\n        },\n      ]\n    },\n    {\n      id: 4,\n      name: 'Chief Operating Officer',\n      title: 'COO',\n      children: [\n        {\n          id: 12,\n          name: 'Business Performance',\n        },\n        {\n          id: 13,\n          name: 'Operations',\n        },\n      ]\n    },\n    {\n      id: 5,\n      name: 'Chief Financial Officer',\n      title: 'CFO',\n      children: [\n        {\n          id: 14,\n          name: 'Controlling',\n        },\n        {\n          id: 15,\n          name: 'HR',\n        },\n      ]\n    },\n  ]\n}\n","import React from 'react'\nimport Tree, { useTreeState, treeHandlers } from 'react-hyper-tree'\nimport highlight from 'highlight.js'\nimport BaseLayout from '../../components/BaseLayout';\nimport NumberInput from '../../components/NumberInput';\nimport Checkbox from '../../components/Checkbox';\nimport Select from '../../components/Select';\nimport Panel from '../../components/Panel';\nimport Row from '../../components/Row';\nimport { smallData, data } from './data'\n\nimport './style.scss'\nimport { classnames } from '../../helpers';\n\n// export interface HyperTreeViewMainProps {\n//   classes?: ClassesType;\n//   data: TreeNode[];\n//   depth?: number;\n//   depthGap?: number;\n//   disableHorizontalLines?: boolean;\n//   disableLines?: boolean;\n//   disableVerticalLines?: boolean;\n//   displayedName?: string | ((node: any) => string);\n//   draggable?: boolean;\n//   draggableHandlers: any;\n//   gapMode?: 'margin' | 'padding';\n//   horizontalLineStyles?: React.CSSProperties;\n//   renderDragZone?: (props: DragZoneProps) => React.ReactNode | string | null;\n//   renderNode?: (props: DefaultNodeProps) => React.ReactNode | string | null;\n//   setOpen?: (node: any) => void;\n//   setSelected?: (node: any, selected?: boolean) => void;\n//   staticNodeHeight?: number;\n//   verticalLineOffset?: number;\n//   verticalLineStyles?: React.CSSProperties;\n//   verticalLineTopOffset?: number;\n// }\n\nconst UPDATE_FIELD = 'UPDATE_FIELD'\n\nconst updateField = (name, value) => ({\n  type: UPDATE_FIELD,\n  payload: { name, value }\n})\n\nconst initialState = {\n  gapMode: 'padding',\n  disableLines: false,\n  disableHorizontalLines: false,\n  disableVerticalLines: false,\n  depthGap: 20,\n  draggable: false,\n  verticalLineOffset: 5,\n  verticalLineTopOffset: 0,\n  hoverColor: 'default',\n  selectionColor: 'default',\n  multipleSelect: false,\n  verticalLineColor: '#c4c4c4',\n  horizontalLineColor: '#c4c4c4',\n  enhanced: false,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_FIELD: {\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    }\n    default: return state\n  }\n}\n\nconst gapModeOptions = [\n  {\n    label: 'Padding',\n    value: 'padding',\n  },\n  {\n    label: 'Margin',\n    value: 'margin',\n  },\n]\n\nconst colorOptions = [\n  {\n    label: 'Default',\n    value: 'default',\n  },\n  {\n    label: 'White',\n    value: 'white',\n  },\n  {\n    label: 'Gray',\n    value: 'gray',\n  },\n]\n\nconst hoverOptions = [\n  {\n    label: 'Default',\n    value: 'default',\n  },\n  {\n    label: 'White',\n    value: 'white',\n  },\n  {\n    label: 'Gray',\n    value: 'gray',\n  },\n]\n\nconst lineColorsOptions = [\n  {\n    label: 'Black',\n    value: 'black',\n  },\n  {\n    label: 'Red',\n    value: 'red',\n  },\n  {\n    label: 'Green',\n    value: 'green',\n  },\n  {\n    label: 'Blue',\n    value: 'blue',\n  },\n]\n\nconst colorMap = {\n  default: 'default-color-selected',\n  white: 'white-color-selected',\n  gray: 'gray-color-selected',\n}\n\nconst hoverMap = {\n  default: 'default-color',\n  white: 'white-color',\n  gray: 'gray-color',\n}\n\nconst HyperTree = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const { required, handlers } = useTreeState(\n    {\n      id: 'tree',\n      data: state.enhanced ? data : smallData,\n      defaultOpened: true,\n      multipleSelect: state.multipleSelect,\n    },\n  )\n\n  React.useEffect(() => {\n    if (state.enhanced) {\n      dispatch(updateField('verticalLineTopOffset', -17))\n    } else {\n      dispatch(updateField('verticalLineTopOffset', 0))\n    }\n  }, [state.enhanced])\n\n  // console.log('instance1: ', instance1);\n  // React.useEffect(() => {\n  //   instance.enhanceNodes()\n  //   forceUpdate()\n  // }, [enhance, forceUpdate, instance])\n\n\n  const handleChangeField = React.useCallback(field => value => {\n    dispatch(updateField(field, value))\n  }, [])\n\n  const renderNodeCode = `\n    const renderNode = useCallback(({\n      node,\n      onToggle,\n    }) => (\n      <div className=\"tree-node\" key={node.data.title}>\n                  <div\n                    onClick={onToggle}\n                    className={classnames({\n                      'tree-icon': true,\n                      'empty-icon': !node.hasChildren(),\n                      [node.options.opened\n                        ? 'close-icon'\n                        : 'open-icon']: node.hasChildren(),\n                    })}\n                  />\n                  <div\n                    className={classnames({\n                      'node-content-wrapper': true,\n                      'node-selected': node.isSelected(),\n                    })}\n                    onClick={\n                      () => treeHandlers.trees.tree.handlers.setSelected(\n                        node,\n                        !node.isSelected(),\n                      )\n                    }\n                  >\n                    <div className=\"titles\">\n                      <div className=\"node-title\">\n                        {node.data.name}\n                      </div>\n                      {node.data.title && (\n                        <div className=\"node-subtitle\">\n                          {node.data.title}\n                        </div>\n                      )}\n                    </div>\n                    {!!node.options.childrenCount && (\n                      <div className=\"children-length\">\n                        <div>{node.options.childrenCount}</div>\n                      </div>\n                    )}\n                  </div>\n            </div>\n    ), [])\n  `\n\n  const code = `\n  import React${state.enhanced ? ', { useCallback }' : ''} from 'react'\n  ${state.enhanced ? `import Tree, {\n    useTreeState,\n    treeHandlers,\n  } from 'react-hyper-tree'` : `import Tree, { useTreeState } from 'react-hyper-tree'`}\n\n  const Component = () => {\n    const { required, handlers } = useTreeState({\n      id: 'tree',\n      data: data,\n      defaultOpened: true,\n      multipleSelect: ${state.multipleSelect},\n    })\n    ${state.enhanced ? renderNodeCode : ''}\n    return (\n      <Tree\n                  {...required}\n                  {...handlers}\n                  horizontalLineStyles={{\n                        stroke: '${state.horizontalLineColor}',\n                        strokeWidth: 1,\n                        strokeDasharray: '1 4',\n                  }}\n                  verticalLineStyles={{\n                        stroke: '${state.verticalLineColor}',\n                        strokeWidth: 1,\n                        strokeDasharray: '1 4',\n                  }}\n                  draggable={${state.draggable}}\n                  gapMode={${state.gapMode}}\n                  depthGap={${state.depthGap}}\n                  disableLines={${state.disableLines}}\n                  disableHorizontalLines={${state.disableHorizontalLines}}\n                  disableVerticalLines={${state.disableVerticalLines}}\n                  verticalLineTopOffset={${state.verticalLineTopOffset}}\n                  verticalLineOffset={${state.verticalLineOffset}}\n                  renderNode={${state.enhanced ? 'renderNode' : 'null'}}\n              />\n    )\n  }\n\n  export default Component`\n\n  const renderIcon = () => (\n    <div className=\"tree-icon\" />\n  )\n\n  const renderNode = React.useCallback(({ node, onToggle }) => (\n    <div className=\"tree-node\" key={node.data.title}>\n      <div\n        onClick={onToggle}\n        className={classnames({\n          'tree-icon': true,\n          'empty-icon': !node.hasChildren(),\n          [node.options.opened ? 'close-icon' : 'open-icon']: node.hasChildren(),\n        })}\n      />\n      <div\n        className={classnames({\n          'node-content-wrapper': true,\n          'node-selected': node.isSelected(),\n        })}\n        onClick={() => treeHandlers.trees.tree.handlers.setSelected(node, !node.isSelected())}\n      >\n        <div className=\"titles\">\n          <div className=\"node-title\">{node.data.name}</div>\n          {node.data.title && <div className=\"node-subtitle\">{node.data.title}</div>}\n        </div>\n        {!!node.options.childrenCount && (\n          <div className=\"children-length\">\n            <div>{node.options.childrenCount}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  ), [])\n\n  return (\n    <BaseLayout\n      className=\"example-hyper-tree-wrapper\"\n      renderIcon={renderIcon}\n      title=\"react hyper tree\"\n      subTitle=\"playground\"\n      link=\"https://github.com/alekseymakhankov/hyper-tree\"\n    >\n      <Panel label=\"Properties\">\n        <Row>\n          <NumberInput\n            id=\"depth\"\n            tooltip=\"Children indentation related to parent\"\n            label=\"Depth\"\n            type=\"number\"\n            min={0}\n            max={100}\n            value={state.depthGap}\n            onChange={handleChangeField('depthGap')} />\n          <NumberInput label=\"Vertical line top offset\" min={-100} max={100} value={state.verticalLineTopOffset} onChange={handleChangeField('verticalLineTopOffset')} />\n          <NumberInput label=\"Vertical line offset\" min={0} max={100} value={state.verticalLineOffset} onChange={handleChangeField('verticalLineOffset')} />\n        </Row>\n        <Row>\n          <Select\n            id=\"depthGap\"\n            tooltip=\"Indentation mode\"\n            label=\"Gap Mode\"\n            options={gapModeOptions}\n            value={state.gapMode}\n            onChange={handleChangeField('gapMode')}\n          />\n          <Select\n            id=\"nodeSelection\"\n            tooltip=\"You can set any color by css\"\n            label=\"Selection node color\"\n            options={colorOptions}\n            value={state.selectionColor}\n            onChange={handleChangeField('selectionColor')}\n          />\n          <Select\n            id=\"nodeHover\"\n            tooltip=\"You can set any color by css\"\n            label=\"Hover node color\"\n            options={hoverOptions}\n            value={state.hoverColor}\n            onChange={handleChangeField('hoverColor')}\n          />\n        </Row>\n        <Row>\n          <Select\n            color\n            label=\"Vertical line color\"\n            options={lineColorsOptions}\n            value={state.verticalLineColor}\n            onChange={handleChangeField('verticalLineColor')}\n          />\n          <Select\n            color\n            label=\"Horizontal line color \"\n            options={lineColorsOptions}\n            value={state.horizontalLineColor}\n            onChange={handleChangeField('horizontalLineColor')}\n          />\n        </Row>\n        <Row normal>\n          <Checkbox label=\"Disable vertical lines\" onChange={handleChangeField('disableVerticalLines')} />\n          <Checkbox label=\"Disable horizontal lines\" onChange={handleChangeField('disableHorizontalLines')} />\n        </Row>\n        <Row normal>\n          <Checkbox label=\"Disable lines\" onChange={handleChangeField('disableLines')} />\n          <Checkbox label=\"Multiple select\" onChange={handleChangeField('multipleSelect')} />\n        </Row>\n        <Row normal>\n          <Checkbox label=\"Draggable\" onChange={handleChangeField('draggable')} />\n          <Checkbox label=\"Enhance tree\" onChange={handleChangeField('enhanced')} />\n        </Row>\n      </Panel>\n\n      <Row style={{ marginBottom: '20px' }}>\n        <div className=\"code-wrapper\">\n          <div className=\"line-numbers\">\n            {new Array(state.enhanced ? 89 : 40).fill(null).map((_, index) => (\n              <div key={index}>{index + 1}</div>\n            ))}\n          </div>\n          <div className=\"rendered\">\n            <pre>\n              <code\n                className=\"code-view hljs\"\n                dangerouslySetInnerHTML={{ __html: highlight.highlightAuto(code, ['js']).value }}\n              />\n            </pre>\n          </div>\n        </div>\n        <Tree\n          key={state.enhanced ? 'enhanced': 'tree'}\n          {...required}\n          {...handlers}\n          horizontalLineStyles={{\n            stroke: state.horizontalLineColor,\n            strokeWidth: 2,\n            strokeDasharray: '2 1',\n          }}\n          verticalLineStyles={{\n            stroke: state.verticalLineColor,\n            strokeWidth: 2,\n            strokeDasharray: '2 1',\n          }}\n          draggable={state.draggable}\n          gapMode={state.gapMode}\n          staticNodeHeight={state.enhanced ? 44 : undefined}\n          depthGap={parseInt(state.depthGap)}\n          disableLines={state.disableLines}\n          disableHorizontalLines={state.disableHorizontalLines}\n          disableVerticalLines={state.disableVerticalLines}\n          verticalLineTopOffset={parseInt(state.verticalLineTopOffset)}\n          verticalLineOffset={parseInt(state.verticalLineOffset)}\n          classes={{\n            selectedNodeWrapper: state.enhanced ? '' : `selected-node ${colorMap[state.selectionColor]}`,\n            nodeWrapper: state.enhanced ? '' : `node-wrapper ${hoverMap[state.hoverColor]}`,\n            treeWrapper: state.enhanced ? 'tree-wrapper' : 'tree-wrapper simple',\n          }}\n          renderNode={state.enhanced ? renderNode : undefined}\n        />\n      </Row>\n    </BaseLayout>\n  )\n}\n\nexport default HyperTree\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { parseQuery } from './helpers';\nimport Home from './packages/Home';\nimport HyperModal from './packages/HyperModal';\nimport HyperTree from './packages/HyperTree'\nimport './App.css';\n\nconst packagesMapper = {\n  'home': Home,\n  'hyper-modal': HyperModal,\n  'hyper-tree': HyperTree,\n};\n\nclass App extends Component {\n  render() {\n    const { location: { search } } = this.props;\n    const packageType = parseQuery(search).package || 'home';\n    const PackageComponent = packagesMapper[packageType];\n    return (\n      <PackageComponent />\n    );\n  }\n}\n\nexport default withRouter(App);\n","export const parseQuery = (query) => {\r\n  const queryObject = {};\r\n\r\n  query\r\n    .replace('?', '')\r\n    .split('&')\r\n    .forEach((queryFragment) => {\r\n      const [key, value] = queryFragment.split('=');\r\n      queryObject[key] = value;\r\n    });\r\n\r\n  return queryObject;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter><Route path=\"/\" render={() => <App />} /></BrowserRouter>,\n   document.getElementById('root'))\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
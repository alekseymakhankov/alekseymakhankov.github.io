{"version":3,"sources":["Home.js","helpers/classnames.js","components/BaseLayout/index.jsx","components/Button/index.jsx","components/HeaderText/index.jsx","packages/HyperModal/index.jsx","router.jsx","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Component","classnames","_len","arguments","length","classes","Array","_key","join","Object","keys","filter","key","reduce","classString","item","concat","convertObjectToString","BaseLayout","this","props","children","React","Button","_ref","onClick","title","wide","_ref$position","position","ButtonComponent","headerMapper","h1","objectWithoutProperties","h2","_ref2","h3","_ref3","h4","_ref4","h5","_ref5","h6","_ref6","HeaderText","_ref7","_ref7$size","size","Header","HyperModalComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openModal","setState","isModalOpen","closeModal","state","components_BaseLayout","index_es","isOpen","requestClose","contentClassName","components_HeaderText","es","id","components_Button","RouterComponent","BrowserRouter","basename","process","Switch","Route","exact","path","component","Home","HyperModal","Boolean","window","location","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a0905f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"title\">\n          Welcome to awesome packages landing\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const convertObjectToString = (classes) => {\r\n  return Object\r\n    .keys(classes)\r\n    .filter(key => !!classes[key])\r\n    .reduce(\r\n      (classString, item) => (classString\r\n        ? `${classString}${item ? ` ${item}` : ''}`\r\n        : `${item}`),\r\n      '',\r\n    );\r\n}\r\n\r\nexport const classnames = (...classes) => {\r\n  if (classes[0] && typeof classes[0] === 'string') {\r\n    return classes.join(' ');\r\n  }\r\n  return convertObjectToString(classes[0]);\r\n}\r\n","import React from 'react';\r\nimport { classnames } from 'helpers';\r\nimport './style.scss';\r\n\r\nclass BaseLayout extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className={classnames('base-layout-wrapper', this.props.className)}>\r\n        <div className=\"content-wrapper\">\r\n          {this.props.children}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BaseLayout;\r\n","import React from 'react';\r\nimport { classnames } from 'helpers';\r\nimport './style.scss';\r\n\r\nconst Button = ({ onClick, title, wide, position = 'left' }) => {\r\n  const ButtonComponent = () => (\r\n    <button className=\"custom-button\" onClick={onClick}>{title}</button>\r\n  );\r\n  if (wide) {\r\n    return (\r\n      <div className={classnames('button-wrapper', position)}>\r\n        <ButtonComponent />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonComponent />\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Header1 = ({ title, ...props }) => (<h1 {...props}>{title}</h1>);\r\nconst Header2 = ({ title, ...props }) => (<h2 {...props}>{title}</h2>);\r\nconst Header3 = ({ title, ...props }) => (<h3 {...props}>{title}</h3>);\r\nconst Header4 = ({ title, ...props }) => (<h4 {...props}>{title}</h4>);\r\nconst Header5 = ({ title, ...props }) => (<h5 {...props}>{title}</h5>);\r\nconst Header6 = ({ title, ...props }) => (<h6 {...props}>{title}</h6>);\r\n\r\nconst headerMapper = {\r\n  h1: Header1,\r\n  h2: Header2,\r\n  h3: Header3,\r\n  h4: Header4,\r\n  h5: Header5,\r\n  h6: Header6,\r\n};\r\n\r\nconst HeaderText = ({ title, size = 'h1' }) => {\r\n  const Header = headerMapper[size];\r\n  return (\r\n    <Header title={title} className=\"custom-header-text\" />\r\n  );\r\n}\r\n\r\nexport default HeaderText;\r\n","import React from 'react';\r\nimport HyperModal from 'react-hyper-modal';\r\nimport Gist from 'react-gist';\r\nimport BaseLayout from 'components/BaseLayout';\r\nimport Button from 'components/Button';\r\nimport HeaderText from 'components/HeaderText';\r\nimport './style.scss';\r\n\r\nclass HyperModalComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  openModal = () => this.setState({ isModalOpen: true });\r\n  closeModal = () => this.setState({ isModalOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <BaseLayout className=\"example-hyper-modal-wrapper\">\r\n        <header className=\"header\">\r\n          <div className=\"title\">react hyper modal</div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <HyperModal\r\n            isOpen={this.state.isModalOpen}\r\n            requestClose={this.closeModal}\r\n            classes={{\r\n              contentClassName: 'modal-content',\r\n            }}\r\n          />\r\n          <HeaderText title=\"Simple modal\" />\r\n          <Gist id=\"965ebd30f423f14ac342ba6be07fe54b\" />\r\n          <Button\r\n            onClick={this.openModal}\r\n            title=\"open simple modal\"\r\n            position=\"center\"\r\n            wide\r\n          />\r\n        </div>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HyperModalComponent;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport HyperModal from './packages/HyperModal';\r\n\r\nconst RouterComponent = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/hyper-modal\" component={HyperModal} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterComponent;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}